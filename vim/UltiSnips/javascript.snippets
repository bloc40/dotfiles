snippet fun
function ${1: ${2:functionName}}(${3}) {
	$0
}
endsnippet

snippet if
if (${1:statement}) {
	$0
}
endsnippet

snippet ife
if (${1:statement}) {
	$0
} else {
}
endsnippet

snippet sett
setTimeout(() => {
	$0
}, ${1:delay});
endsnippet

snippet seti
setInterval(() => {
	$0
}, ${1:delay});
endsnippet

snippet dqs
document.querySelector('$0');
endsnippet

snippet log
console.log($0)
endsnippet

snippet warn
console.warn($0);
endsnippet

snippet ael
addEventListener('$0');
endsnippet

snippet ed
export default $0;
endsnippet

snippet t
<${1:div}>$0</$1>
endsnippet

snippet div
<div className='$1'>$0</div>
endsnippet

snippet switch
switch($1) {
	case $2:
		$3
		break;
	default:
		$4
}
endsnippet

snippet img
<img src='$1'>
endsnippet

# ===============================================
# React snippets
# ===============================================

snippet cl
class ${1:ClassName} extends Component {
	render() {
		return (
			$0
		);
	}
}
endsnippet

snippet con
constructor(${1:props}) {
	super(props);

	$0
}

endsnippet

snippet cwm
componentWillMount() {
	$0
}
endsnippet

snippet cdm
componentDidMount() {
	$0
}
endsnippet

snippet cwu
componentWillUpdate() {
	$0
}
endsnippet

snippet cwrp
componentWillReceiveProps(${1:props}) {
	$0
}
endsnippet

snippet ren
render() {
	return (
		$0
	);
}
endsnippet

snippet imp
import ${1:React}${2:, { Component }} from ${3:'react'}
$0
endsnippet

snippet imf
import $1 from '$2'
endsnippet

snippet im{
import { $1 } from '$2'
endsnippet

snippet impp
import PropTypes from 'prop-types'
endsnippet

snippet ss
this.setState({
	$0
})
endsnippet

snippet ssp
this.setState((prevState) => ({
	$1: $2
}))
endsnippet

snippet f=>
${1:functionName} = ($2) => {
	$0
}
endsnippet

snippet r=>
import React from 'react'
import PropTypes from 'prop-types'

const $1 = ($2) => {
	return (
		$0
	)
}

$1.propTypes = {
}

export default $1;
endsnippet

snippet rcc
import React, { Component } from 'react'
import PropTypes from 'prop-types'

class $1 extends Component {
	render() {
		return (
			$0
		)
	}
}

$1.propTypes = {
}

export default $1
endsnippet

# ===============================================
# ReactNative snippets
# ===============================================

snippet style
const styles = StyleSheet.create({
	$0
})
endsnippet

snippet st
style={styles.$0}
endsnippet
